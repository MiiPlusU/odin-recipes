Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser. DevTools can help you edit pages on-the-fly and diagnose problems quickly, which ultimately helps you build better websites, faster.



inspect page:
work with dom or css?
right click > inspect
Control+Shift+C (Windows, Linux, ChromeOS) to open elements panel

logged messages or run javascript
Control+Shift+J (Windows, Linux, ChromeOS) to jump straight into the Console pane

C stands for CSS.
J for JavaScript.
I designates your choice.

F12 ctrl + shift + i opens last panel

The C shortcut opens the Elements panel in Inspect. inspector mode. This mode shows you helpful tooltips when you hover over elements on a page. You can also click any element to view its CSS in the Elements > Styles pane.
imow: inspector mode lets you get helpful tips when hovering over elements, its the square and arrow icon



Chrome devtools tabs:
Device mode: simulate mobile device
Element panel and css: View and change the DOM and CSS or imow work with html and css elements 
Console panel: View messages and run JavaScript from the Console. imow check logs and run js
Sources panel: Debug JavaScript, persist changes made in DevTools across page reloads, save and run snippets of JavaScript, and save changes that you make in DevTools to disk. imow run js with breakpoints and persist changes, debug js
Network panel: View and debug network activity. imow manage network activity
Recorder panel: Record, replay, and measure user flows. imow json events and styles
Performance panel: Find ways to improve load and runtime performance. imow unit of time ms for measuring speed of web page
Memory panel: imow memory usage or object memory usage
Application Panel: Inspect all resources that are loaded, including IndexedDB or Web SQL databases, local and session storage, cookies, Application Cache, images, fonts, and stylesheets. imow app level metrics including watching the status of services like dbs and sessions and cache and cookies and storage and etc, running is a status
Security panel: Debug mixed content issues, certificate problems, and more.





Opening Chrome DevTools:
1.Right click element > select inspect
opens dom tree
2. click 3 dots > more tools > dev tools
Auto-open DevTools on every new tab
1. quit running chrom instances
2. open terminal
3. 
MacOS:
open -a "Google Chrome" --args --auto-open-devtools-for-tabs

Windows:
start chrome --auto-open-devtools-for-tabs

Linux:
google-chrome --auto-open-devtools-for-tabs
DevTools will automatically open for every new tab until you close Chrome.

TIPS:
escape key toggles the drawer
ctrl shift p opens command menu like in vscode, REALLY USEFUL
you can also click 3 dots  > more settings > run cmd menu
you can right click tabs and move them around
you can fix panel layout by going to settings > panel layout
keyboard shortcuts can be edited by enabling  keyboard shortcuts experiements in settings then go to shortcuts and edit there


DOM VS HTML:
The page's HTML is now different than its DOM. In other words, HTML represents initial page content, and the DOM represents current page content. When JavaScript adds, removes, or edits nodes, the DOM becomes different than the HTML
imow html is the skeleton of the page, dom is the result after its run

html:
<!doctype html>
<html>
  <head>
    <title>Hello, world!</title>
  </head>
  <body>
    <h1>Hello, world!</h1>
    <p>This is a hypertext document on the World Wide Web.</p>
    <script src="/script.js" async></script>
  </body>
</html>



define dom:
The Document Object Model (DOM) is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects; that way, programming languages can interact with the page.
The browser parses the HTML and creates a tree of objects like this:
dom:
html
  head
    title
  body
    h1
    p
    script

imow each element is a node in the dom, nodes can be changed based on scripts, doms exist so that programming languages can interact with the page

if you right click an element in inspect, you can scroll back to that element at any point using the scroll into view button, it changes the viewport back to that element

ctrl shift p show rulers on hover shows measurements of each element in px, width and height

ctrl + f
You can search the DOM Tree by string, CSS selector, or XPath selector.
so basically you can search by css selector, string, or xpath

The Elements panel selects the first matching result in the DOM tree and rolls it into view in the viewport. By default, this happens as you type. If you always work with long search queries, you can make DevTools run search only when you press Enter.

To avoid unnecessary jumps between nodes, clear the Settings. Settings > Preferences > Global > Search as you type checkbox.

You can temp change element strings in the dom tree. You can also change attributes by double click or right clicking on the element > edit attribute. double clicking and right  licking accomplishes everything

imow edit as html lets you edit as html, edit attribute, etc

you can duplicate a node too by selecting duplicate element

In the Elements panel, right-click the image URL and select Capture node screenshot from the drop-down menu.
imow you can take a picture of an image WITHIN INSPECT who woulda thought, not me

can drag and drop elements/nodes within the dom
Shift + Alt + Down on element will duplicate elements/nodes within the dom

Capture node screenshot
right click > capture node screenshot, it'll save the photos to downloads

imow- you can force a node into a certain state like hover by right click and clicking force state

imow - you can hide a node in the dom by selecting the element and pressing the letter h

imow - you can delete a node by highlight element > right click > delete element
cltrl z to undo

Many of the instructions in this tutorial instruct you to right-click a node in the DOM Tree and then select an option from the context menu that pops up. If you don't see the specified option in the context menu, try right-clicking away from the node text.


STYLES
imow-clicking .cls reveals a text box where you can add a class
imow-the element you are inspecting is revealing checkboxs for classes associated with it

Add a pseudostate to a class
Use the Styles pane to permanently apply a CSS pseudostate to an element. DevTools supports :active, :focus, :hover, :visited, and others
so .cls is for class and :hov is to force an element state??
so the colon is for a pseduostate ie .aloha.hover:hover

BOX Model
click show sidebar or imow arrow with rectangle next to it to show box Model
you can change values in the box model
The Box Model defaults to pixels, but it also accepts other values, such as 25%, or 10vw
vw viewport

Every single thing on a webpage is a rectangular box
imow-everything on a web page is a rectangle box

padding: imow-effects the space between a box border and its content
margain: imow-effects the space between a box from another box
border: imow-effects the space beween the margain and the padding, the border is the box pretty much
EVERY SINGLE ELEMENT IN CSS IS A BOX
so padding just makes the box bigger
so border is like the edge of padding or edges of box
adding height and width properties can adjust the size of our content box
padding goes outside of the content box
margain goes outside border
the bigger margain always wins with element boxes that share margains
margain is not taken into account when measuring the height and width of an element

box-sizing: border-box;
it makes styling easier so often, border-box is added to the universal selector, the height and width is the actualy height and width
what this does is it determines the size of the content of the element based on height, width, padding, and border
so basically, size of element = padding+border+content
size of element = height and width
height and width = padding+border+content
vs
size of element = (height+width)
chrome dev tools, computed panel is the easiest way to learn the box model

In css there are inline boxes and block boxes
The type refers to how the box behaves in terms of page flow and in relation to other boxes on the page. Boxes have an inner display type and an outer display type.

imow-The type of box explains their behavior in relation to other boxes